<div class="add-product-form">
 <div>
<h1>Create a New Product</h1>
<form id="productForm" action="/products" method="POST" enctype="multipart/form-data">
  
  <%- include('../partials/products/imageUploader') %>
  
  <%- include('../partials/categories/select', {
  metaCategories,
  mainCategories,
  subCategories
}) %>


  <div><label for="name">Product Name:</label><input type="text" id="name" name="name" required /></div>
  <div><label for="description">Product Description:</label><textarea id="description" name="description" required></textarea></div>
  <div><label for="price">Price:</label><input type="number" id="price" name="price" required /></div>
  <div><label for="salePrice">Sale Price (optional):</label><input type="number" id="salePrice" name="salePrice" /></div>
  <div><label for="brand">Brand:</label><input type="text" id="brand" name="brand" required /></div>
  
  <div><label for="stock">Stock Quantity:</label><input type="number" id="stock" name="stock" required /></div>
  
  <%- include('../partials/products/variants') %>

  <button id="submit-button" type="submit">Create Product</button>
</form>


</div> 
</div>

<script>
  document.getElementById('productForm').addEventListener('submit', async (e) => {
    e.preventDefault();

    const productName = document.getElementById('name').value;
    const productDescription = document.getElementById('description').value;
    const productPrice = document.getElementById('price').value;
    const productSalePrice = document.getElementById('salePrice').value;
    const productBrand = document.getElementById('brand').value;
    const productStock = document.getElementById('stock').value;

    const formData = new FormData();
    
    //Handle variants:
  async function collectVariants() {
    const variantGroups = document.querySelectorAll('.variant-group');
    const variants = [];

    for (let group of variantGroups) {
      const name = group.querySelector('input[name*="[name]"]').value;
      const price = parseFloat(group.querySelector('input[name*="[price]"]').value) || 0;
      const fileInput = group.querySelector('input[name*="[image]"]');
      const file = fileInput.files[0];

      let base64Image = null;

      if (file) {
        base64Image = await toBase64(file);
      }

      variants.push({
        name,
        priceAdjustment: price,
        imageBase64: base64Image
      });
    }

    window.variants = variants;
  }

  function toBase64(file) {
    return new Promise((resolve, reject) => {
      const reader = new FileReader();
      reader.readAsDataURL(file);
      reader.onload = () => resolve(reader.result);
      reader.onerror = error => reject(error);
    });
  }
  await collectVariants(); // Important: wait for images to convert

    // Append text fields
    formData.append('productName', productName);
    formData.append('productDescription', productDescription);
    formData.append('productPrice', productPrice);
    formData.append('productSalePrice', productSalePrice);
    formData.append('productBrand', productBrand);
    formData.append('productStock', productStock);
    formData.append('subCatId', window.subCatId || '');

    // Append variants (as JSON string)
    formData.append('variants', JSON.stringify(window.variants || []));

    // Append selected images
    (window.selectedImages || []).forEach((file, index) => {
      formData.append('images', file); // field name should match your backend
    });

    try {
  const res = await fetch('/products', {
    method: 'POST',
    body: formData
  });

  const result = await res.json();
  console.log('Server response:', result);

  if (res.ok) {
    document.getElementById('productForm').reset();
    window.selectedImages = [];
    window.variants = [];
    window.subCatId = '';

    // Optional: show a success message
    alert('Product uploaded successfully!');
  } else {
    // Optional: handle validation errors or server messages
    console.error('Server error:', result.message || result);
    alert('Upload failed: ' + (result.message || 'Unknown error'));
  }
} catch (err) {
  console.error('Upload failed:', err);
  alert('Something went wrong. Please try again.');
}
</script>
