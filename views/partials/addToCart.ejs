<!-- Initially show "Add to Cart" button -->
<button class="add-to-cart-btn" data-product-id="<%= product._id %>" data-sale-price="<%= product.salePrice %>" data-price="<%= product.price %>">
  Add to Cart
</button>

<!-- Variant select and second Add to Cart button will appear only after clicking the first button -->
<div id="variant-select-container-<%= product._id %>" style="display: none;">
  <% if (product.variants && product.variants.length > 0) { %>
    <label for="variant-select-<%= product._id %>">Select Variant:</label>
    <select id="variant-select-<%= product._id %>" class="variant-select">
      <% product.variants.forEach(variant => { %>
        <% if (variant.priceAdjustment && variant.priceAdjustment > 0) { %>
          <option value="<%= variant._id %>">
            <%= variant.name %> - UGX <%= variant.priceAdjustment.toLocaleString() %>
          </option>
        <% } else { %>
          <option value="<%= variant._id %>">
            <%= variant.name %>
          </option>
        <% } %>
      <% }) %>
    </select>
  <% } %>
  
  <button class="add-to-cart-btn" data-product-id="<%= product._id %>" onclick="addToCart('<%= product._id %>')">
    Add to Cart
  </button>
</div>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    const cartButtons = document.querySelectorAll('.add-to-cart-btn');

    const showAlert = (message, type) => {
      const alertDiv = document.createElement('div');
      alertDiv.classList.add('alert', type === 'success' ? 'alert-success' : 'alert-danger');
      alertDiv.textContent = message;
      document.body.appendChild(alertDiv);
      setTimeout(() => {
        alertDiv.style.display = 'none';
      }, 5000);
    };

    // Show the variant select and second Add to Cart button after first click
    cartButtons.forEach(button => {
      button.addEventListener('click', (e) => {
        const productId = button.getAttribute('data-product-id');
        const variantSelectContainer = document.querySelector(`#variant-select-container-${productId}`);

        // Check if variant selection is already shown
        if (variantSelectContainer.style.display === 'none' || variantSelectContainer.style.display === '') {
          // Show the variant select dropdown
          variantSelectContainer.style.display = 'block';
          // Hide the initial "Add to Cart" button (optional)
          button.style.display = 'none';
        } else {
          // If variant select is already shown, add the product to the cart
          const variantSelect = document.querySelector(`#variant-select-${productId}`);
          const variantId = variantSelect ? variantSelect.value : null;
          addToCart(productId, variantId);
        }
      });
    });

    const addToCart = async (productId, variantId) => {
      const product = document.querySelector(`[data-product-id='${productId}']`);
      const salePrice = product ? product.dataset.salePrice : null;
      const price = salePrice ? salePrice : product.dataset.price; // Use sale price if available, otherwise the regular price

      // Get the selected variant if applicable
      let variantName = null;
      if (variantId) {
        const variantSelect = document.querySelector(`#variant-select-${productId}`);
        const selectedOption = variantSelect.querySelector(`option[value='${variantId}']`);
        if (selectedOption) {
          variantName = selectedOption.textContent.split(' - ')[0]; // Get the name from the option text
        }
      }

      try {
        const res = await fetch('/cart/add', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json'
          },
          body: JSON.stringify({ productId, variantId, price, variantName })
        });

        if (res.ok) {
  fbq('track', 'AddToCart', {
    content_ids: [productId],
    content_type: 'product',
    value: parseFloat(price),
    currency: 'UGX'
  });
  showAlert('Product added to cart successfully!', 'success');
  window.location.reload();
} else {
          showAlert('Failed to add product to cart', 'failure');
        }
      } catch (err) {
        showAlert('An error occurred while adding to cart', 'failure');
        console.error(err);
      }
    };
  });
</script>