<div class="product-grid">
  <% products.forEach(product => { 
       const hasVariants = product.variants && product.variants.length > 0;
       let editUrl = `/products/edit/${product._id}${hasVariants ? '?variants=true' : ''}`;

       let minVariantPrice = null;
       let maxVariantPrice = null;

       if (hasVariants) {
         const finalPrices = product.variants.map(v => v.salePrice ?? v.price);
         minVariantPrice = Math.min(...finalPrices);
         maxVariantPrice = Math.max(...finalPrices);
       }
  %>
    <div class="product-card" data-id="<%= product.name %>">
  <% if (product.images && product.images.length > 0) { %>
    <img src="<%= product.images[0].url %>" alt="<%= product.name %>">
  <% } else { %>
    <img src="/images/placeholder.png" alt="No Image Available">
  <% } %>

  <h3><%= product.name %></h3>
  <p class="price">
    <% if (hasVariants) { %>
      <% if (minVariantPrice !== maxVariantPrice) { %>
        <span class="discounted">UGX <%= minVariantPrice.toLocaleString() %> - UGX <%= maxVariantPrice.toLocaleString() %></span>
      <% } else { %>
        <span class="discounted">UGX <%= minVariantPrice.toLocaleString() %></span>
      <% } %>
    <% } else { %>
      <% if (product.price !== product.salePrice) { %>
        <span class="original">UGX <%= product.price.toLocaleString() %></span>
        <span class="discounted">UGX <%= product.salePrice.toLocaleString() %></span>
        <span class="percent">(-<%= Math.round((product.price - product.salePrice) / product.price * 100) %>%)</span>
      <% } else { %>
        <span class="discounted">UGX <%= product.price.toLocaleString() %></span>
      <% } %>
    <% } %>
  </p>

  <% if (user && user.role === 'admin') { %>
    <a class="edit-link" href="<%= editUrl %>">Edit</a>
    <button type="button" class="delete-link" onclick="deleteProduct('<%= product._id %>')">Delete</button>
  <% } %>
</div>
  <% }) %>
</div>

<script>
  document.addEventListener("DOMContentLoaded", () => {
    // Handle product card click (but ignore clicks on buttons/links inside)
    document.querySelectorAll(".product-card").forEach(card => {
      card.addEventListener("click", (event) => {
        if (event.target.closest("button, a")) return;
        const productName = card.getAttribute("data-id");
        if (productName) {
          window.location.href = `/products/${productName}`;
        }
      });
    });
  });

  // Handle delete
  async function deleteProduct(productId) {
    if (!confirm('Are you sure you want to delete this product?')) return;

    try {
      const res = await fetch(`/products/${productId}`, { method: 'DELETE' });
      const result = await res.json();

      if (res.ok) {
        alert(result.message || 'Product deleted successfully');
        location.reload(); // Or: history.back();
      } else {
        alert(result.error || 'Failed to delete product');
      }
    } catch (err) {
      console.error('Delete error:', err);
      alert('An error occurred while deleting the product');
    }
  }
</script>